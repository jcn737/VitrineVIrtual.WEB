@using VitrineVirtual.Model
@using VitrineVirtual.WEB.Controllers
@model VitrineVirtual.Model.Cadastro_Produto_Loja

@{
    ViewBag.Title = "Details";
}

<<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>Detalhes do Produto</h2>
        <ol class="breadcrumb">
            <li>
                <a>Detalhes</a>
            </li>
            <li class="active">
                <strong>Detalhes do Produto</strong>
            </li>
        </ol>
    </div>
    <div class="col-lg-2">
    </div>
</div>
<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox product-detail">
                <div class="ibox-content">
                    <div class="row">
                        <div class="col-md-5">
                            <div class="product-images">
                                <div style="width:380px;height:400px">
                                    <div class="product-imitation">
                                        @{
                                            ((CadastroProdutoLojaController)this.ViewContext.Controller).GetImage(Model.ID_Cadastro_Prod_Loja);
                                            var cadProd = (Cadastro_Produto_Loja)Session["Foto"];

                                            if (Session["caminho_1"] != null)
                                            {
                                                var caminhoFoto1 = (FilePath)Session["caminho_1"];

                                                <a href="#" title="Foto 1">
                                                    <img style="position:initial" width="365" height="365" src="@Url.Content(caminhoFoto1.Caminho_Arquivo)" />
                                                </a>
                                            }
                                        }
                                    </div>
                                </div>
                                <div style="width:380px;height:400px">
                                    <div class="product-imitation">
                                        @{
                                            if (Session["caminho_2"] != null)
                                            {
                                                var caminhoFoto2 = (FilePath)Session["caminho_2"];

                                                <a href="#" title="Foto 2">
                                                    <img style="position:initial" width="365" height="365" src="@Url.Content(caminhoFoto2.Caminho_Arquivo)" />
                                                </a>
                                            }
                                        }
                                    </div>
                                </div>
                                <div style="width:380px;height:400px">
                                    <div class="product-imitation">
                                        @{
                                            if (Session["caminho_3"] != null)
                                            {
                                                var caminhoFoto3 = (FilePath)Session["caminho_3"];
                                                <a href="#" title="Foto 3">
                                                    <img style="position:initial" width="365" height="365" src="@Url.Content(caminhoFoto3.Caminho_Arquivo)" />
                                                </a>
                                            }
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-7">
                            <h2 class="font-bold m-b-xs">
                                @Html.DisplayFor(modelItem => Model.Nome_Produto)
                            </h2>
                            <small>@Html.DisplayFor(modelItem => Model.Modelo_Produto)</small>
                            <div class="m-t-md">
                                <h2 class="product-main-price">@Html.DisplayFor(modelItem => Model.Preco_Produto) <small class="text -muted">Sem frete</small> </h2>
                            </div>
                            <hr>
                            <h4>Descrição do Produto</h4>
                            <div class="small text-muted">
                                @Html.DisplayFor(modelItem => Model.Descricao_Produto)
                            </div>
                            <dl class="small m-t-md">
                            </dl>
                            <hr>
                            <div>
                                <div class="btn-group">
                                    <button class="btn btn-info btn-sm"><i class="fa fa-cart-plus"></i> Adicionar a Mala</button>

                                </div>
                            </div>

                            <div>
                                <div id="paypal-button-container"></div>
                            </div>

                            <div>
                                @Html.ActionLink("Pagar com PayPal", "PaymentWithPaypal", "Paypal")

                            </div>


                        </div>
                    </div>
                </div>
                <div class="ibox-footer">
                    <span class="pull-right">
                        Full stock - <i class="fa fa-clock-o"></i> 14.04.2016 10:04 pm
                    </span>
                    The generated Lorem Ipsum is therefore always free
                </div>
            </div>
        </div>
    </div>
</div>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.ID_Cadastro_Prod_Loja }) |
    @Html.ActionLink("Back to List", "Index")
</p>

@section Styles {
    @Styles.Render("~/plugins/slickStyles")
    @Styles.Render("~/plugins/slickThemeStyles")
    @Styles.Render("~/plugins/sweetAlertStyles")
    @Styles.Render("~/plugins/jasnyBootstrapStyles")
    @Styles.Render("~/plugins/codeEditorStyles")
    @Styles.Render("~/plugins/jquery-ui/jqueryuiStyles")
}
@section Scripts {
    @Scripts.Render("~/plugins/slick")
    @Scripts.Render("~/plugins/sweetAlert")
    @Scripts.Render("~/plugins/unobtrusive")
    @Scripts.Render("~/plugins/unobtrusiveMin")
    @Scripts.Render("~/plugins/jasnyBootstrap")
    @Scripts.Render("~/plugins/inspinia")
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/plugins/slimScroll")
    @Scripts.Render("~/plugins/jqueryui")

    <script src="https://www.paypal.com/sdk/js?client-id=sb"></script>
    <script>paypal.Buttons().render('body');</script>

    <script src="https://www.paypal.com/sdk/js?client-id=sb&currency=BRL"></script>
    <script>
        // Render the PayPal button into #paypal-button-container
        paypal.Buttons({

            style: {
                size: 'small',
                color: 'blue',
                shape: 'pill',
                label: 'pay',
                height: 40
            }


        }).render('#paypal-button-container');
    </script>

    <script type="text/javascript">
        $(document).ready(function () {

            $('.product-images').slick({
                dots: true
            });
        });
    </script>

    <script type="text/javascript">

        function SucessoPagamento(id) {
            swal({
                title: "Pagamento Efetuado",
                text: "Seu pagamento foi realizado com sucesso!",
                type: "success",
                showCancelButton: false,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "Confirmar",
                closeOnConfirm: false,
                closeOnCancel: false
            },
                function (isConfirm) {
                    if (isConfirm) {
                        swal("Pagamento Efetuado!", "Seu pagamento foi realizado com sucesso.", "success");
                    };
                });
        }

        function FalhaPagamento(id) {
            swal({
                title: "Pagamento Não Efetuado",
                text: "Seu pagamento falhou, tente novamente ou entre em contato com a administradora do seu cartão ou em seus dados no PayPal!",
                type: "error",
                showCancelButton: false,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "Confirmar",
                closeOnConfirm: false,
                closeOnCancel: false
            },
                function (isConfirm) {
                    if (isConfirm) {
                        swal("Pagamento Não Efetuado!", "Seu pagamento falhou, tente novamente ou entre em contato com a administradora do seu cartão ou em seus dados no PayPal!", "error");
                    };
                });
        }



    </script>
}